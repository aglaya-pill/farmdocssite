{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Chicken: List of chickens: chicken/list Chicken's info: chicken/info Creating a chicken: chicken/create Breed: List of breeds: breed/list Breed's info: breed/info Creating a breed: breed/create Cage: List of cells: cage/list Cage's info: cage/info Creating a cage: cage/create User: List of users: user/list User's info: user/info Work: List of work: work/list Work's info: work/info Creating a work: work/create","title":"Home"},{"location":"#welcome","text":"Chicken: List of chickens: chicken/list Chicken's info: chicken/info Creating a chicken: chicken/create Breed: List of breeds: breed/list Breed's info: breed/info Creating a breed: breed/create Cage: List of cells: cage/list Cage's info: cage/info Creating a cage: cage/create User: List of users: user/list User's info: user/info Work: List of work: work/list Work's info: work/info Creating a work: work/create","title":"Welcome"},{"location":"breed/create/","text":"Create cage Creating a new breed URL : /breeds/create/ Methods : POST Success Responses Code : 200 OK Content : {[]} { \"id\": 1, \"breed\": \"small chicken\", \"avg_eggs\": 4, \"avg_weight\": 2, \"diet\": \"table 5\" }","title":"Creating a breed"},{"location":"breed/create/#create-cage","text":"Creating a new breed URL : /breeds/create/ Methods : POST","title":"Create cage"},{"location":"breed/create/#success-responses","text":"Code : 200 OK Content : {[]} { \"id\": 1, \"breed\": \"small chicken\", \"avg_eggs\": 4, \"avg_weight\": 2, \"diet\": \"table 5\" }","title":"Success Responses"},{"location":"breed/info/","text":"Updating and deleting breed Get, update and delete information about a breed using its ID URL : /breeds/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE Success Responses Code : 200 OK Content : {[]} { \"id\": 1, \"breed\": \"small chicken\", \"avg_eggs\": 3, \"avg_weight\": 2, \"diet\": \"table 5\" }","title":"Breed's info"},{"location":"breed/info/#updating-and-deleting-breed","text":"Get, update and delete information about a breed using its ID URL : /breeds/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE","title":"Updating and deleting breed"},{"location":"breed/info/#success-responses","text":"Code : 200 OK Content : {[]} { \"id\": 1, \"breed\": \"small chicken\", \"avg_eggs\": 3, \"avg_weight\": 2, \"diet\": \"table 5\" }","title":"Success Responses"},{"location":"breed/list/","text":"List of all breeds Shows information about all breeds URL : /breeds/list/ Method : GET Success Responses Code : 200 OK Content : {[]} [ { \"id\": 1, \"breed\": \"small chicken\", \"avg_eggs\": 3, \"avg_weight\": 2, \"diet\": \"table 5\" }, { \"id\": 2, \"breed\": \"big chicken\", \"avg_eggs\": 6, \"avg_weight\": 4, \"diet\": \"table 1\" } ]","title":"List of breeds"},{"location":"breed/list/#list-of-all-breeds","text":"Shows information about all breeds URL : /breeds/list/ Method : GET","title":"List of all breeds"},{"location":"breed/list/#success-responses","text":"Code : 200 OK Content : {[]} [ { \"id\": 1, \"breed\": \"small chicken\", \"avg_eggs\": 3, \"avg_weight\": 2, \"diet\": \"table 5\" }, { \"id\": 2, \"breed\": \"big chicken\", \"avg_eggs\": 6, \"avg_weight\": 4, \"diet\": \"table 1\" } ]","title":"Success Responses"},{"location":"cage/create/","text":"Create cage Creating a new cage URL : /cage/create/ Methods : POST Success Responses Code : 200 OK Content : {[]} { \"id\": 3, \"shed\": 2, \"row\": 11, \"cage\": 7, \"square\": 20 }","title":"Creating a cage"},{"location":"cage/create/#create-cage","text":"Creating a new cage URL : /cage/create/ Methods : POST","title":"Create cage"},{"location":"cage/create/#success-responses","text":"Code : 200 OK Content : {[]} { \"id\": 3, \"shed\": 2, \"row\": 11, \"cage\": 7, \"square\": 20 }","title":"Success Responses"},{"location":"cage/info/","text":"Updating and deleting cage Get, update and delete information about a cage using its ID URL : /cage/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE Success Responses Code : 200 OK Content : {[]} { \"id\": 1, \"shed\": 1, \"row\": 9, \"cage\": 12, \"square\": 10 }","title":"Cage's info"},{"location":"cage/info/#updating-and-deleting-cage","text":"Get, update and delete information about a cage using its ID URL : /cage/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE","title":"Updating and deleting cage"},{"location":"cage/info/#success-responses","text":"Code : 200 OK Content : {[]} { \"id\": 1, \"shed\": 1, \"row\": 9, \"cage\": 12, \"square\": 10 }","title":"Success Responses"},{"location":"cage/list/","text":"List of all cages Shows information about all cages URL : /cage/list/ Method : GET Success Responses Code : 200 OK Content : {[]} [ { \"id\": 1, \"shed\": 1, \"row\": 9, \"cage\": 12, \"square\": 10 }, { \"id\": 2, \"shed\": 2, \"row\": 5, \"cage\": 4, \"square\": 20 }, { \"id\": 3, \"shed\": 2, \"row\": 11, \"cage\": 7, \"square\": 20 } ]","title":"List of cells"},{"location":"cage/list/#list-of-all-cages","text":"Shows information about all cages URL : /cage/list/ Method : GET","title":"List of all cages"},{"location":"cage/list/#success-responses","text":"Code : 200 OK Content : {[]} [ { \"id\": 1, \"shed\": 1, \"row\": 9, \"cage\": 12, \"square\": 10 }, { \"id\": 2, \"shed\": 2, \"row\": 5, \"cage\": 4, \"square\": 20 }, { \"id\": 3, \"shed\": 2, \"row\": 11, \"cage\": 7, \"square\": 20 } ]","title":"Success Responses"},{"location":"chicken/create/","text":"Create chicken Creating a new chicken URL : /chickens/create/ Methods : POST Success Responses Code : 200 OK Content : {[]} { \"id\": 1, \"breed\": \"big chicken\", \"cage\": \"12\", \"weight\": 5, \"age\": 1, \"egg_amount\": 5 }","title":"Creating a chicken"},{"location":"chicken/create/#create-chicken","text":"Creating a new chicken URL : /chickens/create/ Methods : POST","title":"Create chicken"},{"location":"chicken/create/#success-responses","text":"Code : 200 OK Content : {[]} { \"id\": 1, \"breed\": \"big chicken\", \"cage\": \"12\", \"weight\": 5, \"age\": 1, \"egg_amount\": 5 }","title":"Success Responses"},{"location":"chicken/info/","text":"Updating and deleting chicken Get, update and delete information about a chicken using its ID URL : /chickens/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE Success Responses Code : 200 OK Content : {[]} { \"id\": 1, \"breed\": \"big chicken\", \"cage\": \"12\", \"weight\": 5, \"age\": 1, \"egg_amount\": 5 }","title":"Chicken's info"},{"location":"chicken/info/#updating-and-deleting-chicken","text":"Get, update and delete information about a chicken using its ID URL : /chickens/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE","title":"Updating and deleting chicken"},{"location":"chicken/info/#success-responses","text":"Code : 200 OK Content : {[]} { \"id\": 1, \"breed\": \"big chicken\", \"cage\": \"12\", \"weight\": 5, \"age\": 1, \"egg_amount\": 5 }","title":"Success Responses"},{"location":"chicken/list/","text":"List of all chickens Shows information about all chickens URL : /chickens/list/ Method : GET Success Responses Code : 200 OK Content : {[]} [ { \"id\": 1, \"breed\": \"big chicken\", \"cage\": \"12\", \"weight\": 5, \"age\": 1, \"egg_amount\": 5 }, { \"id\": 2, \"breed\": \"small chicken\", \"cage\": \"4\", \"weight\": 3, \"age\": 2, \"egg_amount\": 2 }, { \"id\": 3, \"breed\": \"big chicken\", \"cage\": \"7\", \"weight\": 5, \"age\": 1, \"egg_amount\": 6 } ]","title":"List of chickens"},{"location":"chicken/list/#list-of-all-chickens","text":"Shows information about all chickens URL : /chickens/list/ Method : GET","title":"List of all chickens"},{"location":"chicken/list/#success-responses","text":"Code : 200 OK Content : {[]} [ { \"id\": 1, \"breed\": \"big chicken\", \"cage\": \"12\", \"weight\": 5, \"age\": 1, \"egg_amount\": 5 }, { \"id\": 2, \"breed\": \"small chicken\", \"cage\": \"4\", \"weight\": 3, \"age\": 2, \"egg_amount\": 2 }, { \"id\": 3, \"breed\": \"big chicken\", \"cage\": \"7\", \"weight\": 5, \"age\": 1, \"egg_amount\": 6 } ]","title":"Success Responses"},{"location":"labs/lab2/211/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.1.1 \u0420\u0435\u0430\u043b\u0438\u0437\u0432\u0430\u0442\u044c \u0432 \u0440\u0443\u0447\u043d\u0443\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u044b (\u0432 \u0440\u0443\u0447\u043d\u0443\u044e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 url \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u0434\u0430\u043b\u0435\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0442\u044c \u043c\u0435\u0442\u043e\u0434 list \u0438\u043b\u0438 get_queryset, c \u0446\u0435\u043b\u044c\u044e \u0432\u0437\u044f\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0438\u0437 url-\u0430\u0434\u0440\u0435\u0441\u0430, \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441 \u043d\u0438\u043c\u0438 \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c responce \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e): \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0438\u0437 url-\u0430\u0434\u0440\u0435\u0441\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. (GET, ListAPIView) \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 2 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0438\u0437 url-\u0430\u0434\u0440\u0435\u0441\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. (GET, ListAPIView) \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 2 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0438\u0437 url-\u0430\u0434\u0440\u0435\u0441\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d \u0438 \u043d\u0435\u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d. (GET, ListAPIView) \u0424\u0438\u043b\u044c\u0442\u0440 \u043a\u0443\u0440\u0438\u0446 \u043f\u043e \u043f\u043e\u0440\u043e\u0434\u0435 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u0424\u0438\u043b\u044c\u0442\u0440 \u043a\u0443\u0440\u0438\u0446 \u043f\u043e \u043f\u043e\u0440\u043e\u0434\u0435 \u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0443 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u0424\u0438\u043b\u044c\u0442\u0440 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0435 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u0435\u0437 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438(\u043d\u0435\u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u044b\u0435) \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0435\u0439","title":"2.1.1 \u0420\u0443\u0447\u043d\u044b\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u044b"},{"location":"labs/lab2/211/#211","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u0432\u0430\u0442\u044c \u0432 \u0440\u0443\u0447\u043d\u0443\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u044b (\u0432 \u0440\u0443\u0447\u043d\u0443\u044e \u0437\u043d\u0430\u0447\u0438\u0442, \u0447\u0442\u043e \u0412\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 url \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u0434\u0430\u043b\u0435\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0442\u044c \u043c\u0435\u0442\u043e\u0434 list \u0438\u043b\u0438 get_queryset, c \u0446\u0435\u043b\u044c\u044e \u0432\u0437\u044f\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0438\u0437 url-\u0430\u0434\u0440\u0435\u0441\u0430, \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441 \u043d\u0438\u043c\u0438 \u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c responce \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e): \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0438\u0437 url-\u0430\u0434\u0440\u0435\u0441\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. (GET, ListAPIView) \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 2 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0438\u0437 url-\u0430\u0434\u0440\u0435\u0441\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. (GET, ListAPIView) \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 2 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0438\u0437 url-\u0430\u0434\u0440\u0435\u0441\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d \u0438 \u043d\u0435\u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d. (GET, ListAPIView)","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.1.1"},{"location":"labs/lab2/211/#_1","text":"","title":"\u0424\u0438\u043b\u044c\u0442\u0440 \u043a\u0443\u0440\u0438\u0446 \u043f\u043e \u043f\u043e\u0440\u043e\u0434\u0435"},{"location":"labs/lab2/211/#_2","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"labs/lab2/211/#_3","text":"","title":"\u0424\u0438\u043b\u044c\u0442\u0440 \u043a\u0443\u0440\u0438\u0446 \u043f\u043e \u043f\u043e\u0440\u043e\u0434\u0435 \u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0443"},{"location":"labs/lab2/211/#_4","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"labs/lab2/211/#_5","text":"","title":"\u0424\u0438\u043b\u044c\u0442\u0440 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0435"},{"location":"labs/lab2/211/#_6","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u0435\u0437 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438(\u043d\u0435\u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u044b\u0435)"},{"location":"labs/lab2/211/#_7","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0435\u0439"},{"location":"labs/lab2/212/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.1.2 \u0420\u0435\u0430\u043b\u0438\u0437\u0432\u0430\u0442\u044c \u0432 \u0440\u0443\u0447\u043d\u0443\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u044b (\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 django-filters: \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0434\u0430\u0442\u0435, \u043f\u043e\u0438\u0441\u043a, \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043f\u043e\u043b\u044f\u043c \u0438\u0437 \u0441\u0432\u044f\u0437\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u0446\u0435\u043d, \u0434\u0430\u0442 \u0438\u043b\u0438 \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u0434\u0440\u0443\u0433\u0438\u0445 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u0442\u0438\u043f\u0443 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u043f\u043e \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430, \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u0432\u0448\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u0435(\u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043f\u043e\u043b\u044e \u0438\u0437 \u0441\u0432\u044f\u0437\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b). \u0410 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0443 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u043d\u0435\u0441\u0451\u043d\u043d\u044b\u0445 \u044f\u0438\u0446, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0441\u043d\u0435\u0441\u0451\u043d\u043d\u044b\u0445 \u043a\u0443\u0440\u0438\u0446\u0430\u043c\u0438 \u044f\u0438\u0446 \u0412 filters.py \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b","title":"2.1.2 \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u044b"},{"location":"labs/lab2/212/#212","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u0432\u0430\u0442\u044c \u0432 \u0440\u0443\u0447\u043d\u0443\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u044b (\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 django-filters: \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0434\u0430\u0442\u0435, \u043f\u043e\u0438\u0441\u043a, \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043f\u043e\u043b\u044f\u043c \u0438\u0437 \u0441\u0432\u044f\u0437\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u0446\u0435\u043d, \u0434\u0430\u0442 \u0438\u043b\u0438 \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u0434\u0440\u0443\u0433\u0438\u0445 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.1.2"},{"location":"labs/lab2/212/#_1","text":"","title":"\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u0442\u0438\u043f\u0443 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u043f\u043e \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430, \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u0432\u0448\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u0435(\u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043f\u043e\u043b\u044e \u0438\u0437 \u0441\u0432\u044f\u0437\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b). \u0410 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0434\u0430\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f."},{"location":"labs/lab2/212/#_2","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"labs/lab2/212/#_3","text":"","title":"\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0443 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u043d\u0435\u0441\u0451\u043d\u043d\u044b\u0445 \u044f\u0438\u0446, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0441\u043d\u0435\u0441\u0451\u043d\u043d\u044b\u0445 \u043a\u0443\u0440\u0438\u0446\u0430\u043c\u0438 \u044f\u0438\u0446"},{"location":"labs/lab2/212/#filterspy","text":"","title":"\u0412 filters.py"},{"location":"labs/lab2/212/#_4","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"labs/lab2/221/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.2.1 \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043b\u044e\u0431\u044b\u0445 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u0432 \u0412\u0430\u0448\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0435. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0439 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438 \u0432 settings.py \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","title":"2.2.1 \u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f"},{"location":"labs/lab2/221/#221","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043b\u044e\u0431\u044b\u0445 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u0432 \u0412\u0430\u0448\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0435.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.2.1"},{"location":"labs/lab2/221/#settingspy","text":"","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0439 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438 \u0432 settings.py"},{"location":"labs/lab2/221/#_1","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442"},{"location":"labs/lab2/222/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.2.2 \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439, \u043a\u0440\u043e\u043c\u0435 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0435\u0440\u043d\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438 \u0438 \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u041a\u0430\u0441\u0442\u043e\u043c\u043d\u0430\u044f \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u0412\u043e views.py \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","title":"2.2.2 \u041a\u0430\u0441\u0442\u043e\u043c\u043d\u0430\u044f \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f"},{"location":"labs/lab2/222/#222","text":"\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439, \u043a\u0440\u043e\u043c\u0435 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0435\u0440\u043d\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438 \u0438 \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.2.2"},{"location":"labs/lab2/222/#_1","text":"","title":"\u041a\u0430\u0441\u0442\u043e\u043c\u043d\u0430\u044f \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f"},{"location":"labs/lab2/222/#viewspy","text":"","title":"\u0412\u043e views.py"},{"location":"labs/lab2/222/#_2","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442"},{"location":"labs/lab2/231/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.3.1 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0435\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b: \u0415\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432, \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u043a\u043b\u044e\u0447\u0430 \u043d\u0430 \u0441\u0432\u044f\u0437\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c \u0438\u043c\u0435\u043d\u0438 \u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. \u0415\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432. \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e \u0432 validators.py models.py serializers.py \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 views.py \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 views.py \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u0432\u0430 \u0444\u043e\u0442\u043e \u0442\u0440\u0435\u0442\u044c\u0435\u043c\u0443 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0443 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u041f\u0440\u0438\u043c\u0435\u0440 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438, \u043a\u043e\u0433\u0434\u0430 \u0444\u0430\u0439\u043b \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e","title":"2.3.1 \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432"},{"location":"labs/lab2/231/#231","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0435\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b: \u0415\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432, \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u043a\u043b\u044e\u0447\u0430 \u043d\u0430 \u0441\u0432\u044f\u0437\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c \u0438\u043c\u0435\u043d\u0438 \u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. \u0415\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.3.1"},{"location":"labs/lab2/231/#validatorspy","text":"","title":"\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e \u0432 validators.py"},{"location":"labs/lab2/231/#modelspy","text":"","title":"models.py"},{"location":"labs/lab2/231/#serializerspy","text":"","title":"serializers.py"},{"location":"labs/lab2/231/#viewspy","text":"","title":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 views.py"},{"location":"labs/lab2/231/#_1","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442"},{"location":"labs/lab2/231/#viewspy_1","text":"","title":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 views.py"},{"location":"labs/lab2/231/#_2","text":"","title":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u0432\u0430 \u0444\u043e\u0442\u043e \u0442\u0440\u0435\u0442\u044c\u0435\u043c\u0443 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0443"},{"location":"labs/lab2/231/#_3","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442"},{"location":"labs/lab2/231/#_4","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438, \u043a\u043e\u0433\u0434\u0430 \u0444\u0430\u0439\u043b \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e"},{"location":"labs/lab2/241/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.4.1 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c 3 \u0441\u0438\u0433\u043d\u0430\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435: \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043b\u043e\u0433\u0438\u043a\u0443, \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u0430\u043b\u044f\u0440\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0432 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u041f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0432 \u043b\u043e\u0433 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043b\u044e\u0431\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c. \u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0432 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f. \u041f\u043e\u043b\u0435 egg_amount=3, prev_eggs=0. \u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c egg_amount \u0438 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0435\u0433\u043e \u0440\u0430\u0432\u043d\u044b\u043c 2 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: egg_amount=2, prev_eggs \u043f\u0440\u0438\u043d\u044f\u043b\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e egg_amount, \u0442.\u0435. 3 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c egg_amount \u0438 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0435\u0433\u043e \u0440\u0430\u0432\u043d\u044b\u043c 4 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0417\u0430\u043f\u0438\u0441\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0432 \u043b\u043e\u0433 \u0423\u0434\u0430\u043b\u0438\u043c \u043a\u0443\u0440\u0438\u0446\u0443 31 \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 dead_chickens.txt","title":"2.4.1 \u0421\u0438\u0433\u043d\u0430\u043b\u044b"},{"location":"labs/lab2/241/#241","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c 3 \u0441\u0438\u0433\u043d\u0430\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435: \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043b\u043e\u0433\u0438\u043a\u0443, \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u0430\u043b\u044f\u0440\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0432 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u041f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0432 \u043b\u043e\u0433 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043b\u044e\u0431\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.4.1"},{"location":"labs/lab2/241/#_1","text":"","title":"\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430"},{"location":"labs/lab2/241/#_2","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442"},{"location":"labs/lab2/241/#_3","text":"","title":"\u0421\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0432 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430."},{"location":"labs/lab2/241/#egg_amount3-prev_eggs0","text":"","title":"\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f. \u041f\u043e\u043b\u0435 egg_amount=3, prev_eggs=0."},{"location":"labs/lab2/241/#egg_amount-2","text":"","title":"\u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c egg_amount \u0438 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0435\u0433\u043e \u0440\u0430\u0432\u043d\u044b\u043c 2"},{"location":"labs/lab2/241/#egg_amount2-prev_eggs-egg_amount-3","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: egg_amount=2, prev_eggs \u043f\u0440\u0438\u043d\u044f\u043b\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e egg_amount, \u0442.\u0435. 3"},{"location":"labs/lab2/241/#_4","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442"},{"location":"labs/lab2/241/#egg_amount-4","text":"","title":"\u041e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c egg_amount \u0438 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0435\u0433\u043e \u0440\u0430\u0432\u043d\u044b\u043c 4"},{"location":"labs/lab2/241/#_5","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442"},{"location":"labs/lab2/241/#_6","text":"","title":"\u0417\u0430\u043f\u0438\u0441\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u0432 \u043b\u043e\u0433"},{"location":"labs/lab2/241/#31","text":"","title":"\u0423\u0434\u0430\u043b\u0438\u043c \u043a\u0443\u0440\u0438\u0446\u0443 31"},{"location":"labs/lab2/241/#dead_chickenstxt","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 dead_chickens.txt"},{"location":"labs/lab3/311/","text":"\u0422\u0435\u0441\u0442\u044b \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u0422\u0435\u0441\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044f 'diet' \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Breed class BreedModelTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') def test_diet_label(self): breed_sample = Breed.objects.get(id=1) field_label = breed_sample._meta.get_field('diet').verbose_name self.assertEquals(field_label, 'Diet for this breed') \u0422\u0435\u0441\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b \u043f\u043e\u043b\u044f 'name' \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Worker class WorkerModelTest(TestCase): @classmethod def setUpTestData(cls): Worker.objects.create(name='Darya Kotelnikova', passport='1111 330044', position='vet', salary=50000) def test_name_max_length(self): worker_sample = Worker.objects.get(id=1) max_length = worker_sample._meta.get_field('name').max_length self.assertEquals(max_length, 100) \u0422\u0435\u0441\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Chicken(\u0444\u0443\u043d\u043a\u0446\u0438\u044f str ) class ChickenModelTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=5, cage=23, square=30) Chicken.objects.create(breed=Breed.objects.get(id=1), weight=2, age=1, egg_amount=2, cage=Cage.objects.get(id=1)) def test_chicken_str_output(self): chicken_sample = Chicken.objects.get(id=1) expected_name = str(chicken_sample.breed) + ' ' + str(chicken_sample.cage) self.assertEquals(str(chicken_sample), expected_name) \u041f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432","title":"3.1.1 \u0422\u0435\u0441\u0442\u044b \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c"},{"location":"labs/lab3/311/#_1","text":"","title":"\u0422\u0435\u0441\u0442\u044b \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c"},{"location":"labs/lab3/311/#diet-breed","text":"class BreedModelTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') def test_diet_label(self): breed_sample = Breed.objects.get(id=1) field_label = breed_sample._meta.get_field('diet').verbose_name self.assertEquals(field_label, 'Diet for this breed')","title":"\u0422\u0435\u0441\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044f 'diet' \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Breed"},{"location":"labs/lab3/311/#name-worker","text":"class WorkerModelTest(TestCase): @classmethod def setUpTestData(cls): Worker.objects.create(name='Darya Kotelnikova', passport='1111 330044', position='vet', salary=50000) def test_name_max_length(self): worker_sample = Worker.objects.get(id=1) max_length = worker_sample._meta.get_field('name').max_length self.assertEquals(max_length, 100)","title":"\u0422\u0435\u0441\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b \u043f\u043e\u043b\u044f 'name' \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Worker"},{"location":"labs/lab3/311/#chicken-str","text":"class ChickenModelTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=5, cage=23, square=30) Chicken.objects.create(breed=Breed.objects.get(id=1), weight=2, age=1, egg_amount=2, cage=Cage.objects.get(id=1)) def test_chicken_str_output(self): chicken_sample = Chicken.objects.get(id=1) expected_name = str(chicken_sample.breed) + ' ' + str(chicken_sample.cage) self.assertEquals(str(chicken_sample), expected_name)","title":"\u0422\u0435\u0441\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Chicken(\u0444\u0443\u043d\u043a\u0446\u0438\u044f str)"},{"location":"labs/lab3/311/#_2","text":"","title":"\u041f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432"},{"location":"labs/lab3/312/","text":"\u0422\u0435\u0441\u0442\u044b GET-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0422\u0435\u0441\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0435: /workers/info/id class WorkerGetTest(TestCase): @classmethod def setUpTestData(cls): Worker.objects.create(name='Darya Kotelnikova', passport='1111 330044', position='vet', salary=50000) def test_get_worker(self): url = reverse('farm:workers', args=['1']) data = {'id': 1, 'name': 'Darya Kotelnikova', 'passport': '1111 330044', 'position': 'vet', 'salary': 50000} response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) \u0422\u0435\u0441\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u0443\u0440\u0438\u0446\u0435: /chickens/info/id class ChickenGetTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=5, cage=23, square=30) Chicken.objects.create(breed=Breed.objects.get(id=1), weight=2, age=1, egg_amount=2, cage=Cage.objects.get(id=1)) def test_get_chicken(self): url = reverse('farm:chickens', args=['1']) data = {'id': 1, 'breed': 1, 'weight': 2, 'age': 1, 'egg_amount': 2, 'cage': 1, 'prev_eggs': 0} response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) \u0422\u0435\u0441\u0442 \u0444\u0438\u043b\u044c\u0442\u0440\u0430 \u043a\u0443\u0440\u0438\u0446 \u043f\u043e \u043f\u043e\u0440\u043e\u0434\u0435: chickens_with_breed/?breed=breed_id class ChickenBreedGetTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(id=1, breed='very big chicken', avg_eggs=7, avg_weight=4, diet='table 5') Breed.objects.create(id=2, breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=6, cage=21, square=40) Chicken.objects.create(breed=Breed.objects.get(id=2), weight=2, age=3, egg_amount=2, cage=Cage.objects.get(id=1), prev_eggs=1) Chicken.objects.create(id=2, breed=Breed.objects.get(id=1), weight=6, age=2, egg_amount=8, cage=Cage.objects.get(id=1), prev_eggs=7) def test_get_eggs_range_chicken(self): self.maxDiff = None url = reverse('farm:chickens_breed') data = {'count': 1, 'next': None, 'previous': None, 'results': [ {'id': 1, 'breed': 'very small chicken', 'weight': 2, 'age': 3, 'egg_amount': 2, 'cage': '2 6 21', 'prev_eggs': 1 } ]} response = self.client.get(url, {'breed': '2'}, data, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) \u041f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432","title":"3.1.2 \u0422\u0435\u0441\u0442\u044b GET-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"labs/lab3/312/#get-","text":"","title":"\u0422\u0435\u0441\u0442\u044b GET-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"labs/lab3/312/#workersinfoid","text":"class WorkerGetTest(TestCase): @classmethod def setUpTestData(cls): Worker.objects.create(name='Darya Kotelnikova', passport='1111 330044', position='vet', salary=50000) def test_get_worker(self): url = reverse('farm:workers', args=['1']) data = {'id': 1, 'name': 'Darya Kotelnikova', 'passport': '1111 330044', 'position': 'vet', 'salary': 50000} response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data)","title":"\u0422\u0435\u0441\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0435: /workers/info/id"},{"location":"labs/lab3/312/#chickensinfoid","text":"class ChickenGetTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=5, cage=23, square=30) Chicken.objects.create(breed=Breed.objects.get(id=1), weight=2, age=1, egg_amount=2, cage=Cage.objects.get(id=1)) def test_get_chicken(self): url = reverse('farm:chickens', args=['1']) data = {'id': 1, 'breed': 1, 'weight': 2, 'age': 1, 'egg_amount': 2, 'cage': 1, 'prev_eggs': 0} response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data)","title":"\u0422\u0435\u0441\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u0443\u0440\u0438\u0446\u0435: /chickens/info/id"},{"location":"labs/lab3/312/#chickens_with_breedbreedbreed_id","text":"class ChickenBreedGetTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(id=1, breed='very big chicken', avg_eggs=7, avg_weight=4, diet='table 5') Breed.objects.create(id=2, breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=6, cage=21, square=40) Chicken.objects.create(breed=Breed.objects.get(id=2), weight=2, age=3, egg_amount=2, cage=Cage.objects.get(id=1), prev_eggs=1) Chicken.objects.create(id=2, breed=Breed.objects.get(id=1), weight=6, age=2, egg_amount=8, cage=Cage.objects.get(id=1), prev_eggs=7) def test_get_eggs_range_chicken(self): self.maxDiff = None url = reverse('farm:chickens_breed') data = {'count': 1, 'next': None, 'previous': None, 'results': [ {'id': 1, 'breed': 'very small chicken', 'weight': 2, 'age': 3, 'egg_amount': 2, 'cage': '2 6 21', 'prev_eggs': 1 } ]} response = self.client.get(url, {'breed': '2'}, data, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data)","title":"\u0422\u0435\u0441\u0442 \u0444\u0438\u043b\u044c\u0442\u0440\u0430 \u043a\u0443\u0440\u0438\u0446 \u043f\u043e \u043f\u043e\u0440\u043e\u0434\u0435: chickens_with_breed/?breed=breed_id"},{"location":"labs/lab3/312/#_1","text":"","title":"\u041f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432"},{"location":"labs/lab3/313/","text":"\u0422\u0435\u0441\u0442\u044b POST-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0422\u0435\u0441\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Breed class BreedCreateTest(TestCase): def test_breed_create(self): url = reverse('farm:breed_create') data = { 'id': 1, 'breed': 'very small chicken', 'avg_eggs': 2, 'avg_weight': 2, 'diet': 'table 3' } response = self.client.post(url, data, format='json') self.assertEqual(response.status_code, status.HTTP_201_CREATED) self.assertEqual(response.json(), data) \u0422\u0435\u0441\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Worker class WorkerCreateTest(TestCase): def test_worker_create(self): url = reverse('farm:worker_create') data = { 'id': 1, 'name': 'Darya Kotelnikova', 'passport': '1111 330044', 'position': 'vet', 'salary': 50000 } response = self.client.post(url, data, format='json') self.assertEqual(response.status_code, status.HTTP_201_CREATED) self.assertEqual(response.json(), data) \u0422\u0435\u0441\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Chicken class ChickenCreateTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=5, cage=23, square=30) def test_chicken_create(self): url = reverse('farm:chicken_create') data = { 'id': 1, 'breed': 1, 'weight': 2, 'age': 1, 'egg_amount': 2, 'cage': 1, 'prev_eggs': 1 } response = self.client.post(url, data, format='json') self.assertEqual(response.status_code, status.HTTP_201_CREATED) self.assertEqual(response.json(), data) \u041f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432","title":"3.1.3 \u0422\u0435\u0441\u0442\u044b POST-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"labs/lab3/313/#post-","text":"","title":"\u0422\u0435\u0441\u0442\u044b POST-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"labs/lab3/313/#breed","text":"class BreedCreateTest(TestCase): def test_breed_create(self): url = reverse('farm:breed_create') data = { 'id': 1, 'breed': 'very small chicken', 'avg_eggs': 2, 'avg_weight': 2, 'diet': 'table 3' } response = self.client.post(url, data, format='json') self.assertEqual(response.status_code, status.HTTP_201_CREATED) self.assertEqual(response.json(), data)","title":"\u0422\u0435\u0441\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Breed"},{"location":"labs/lab3/313/#worker","text":"class WorkerCreateTest(TestCase): def test_worker_create(self): url = reverse('farm:worker_create') data = { 'id': 1, 'name': 'Darya Kotelnikova', 'passport': '1111 330044', 'position': 'vet', 'salary': 50000 } response = self.client.post(url, data, format='json') self.assertEqual(response.status_code, status.HTTP_201_CREATED) self.assertEqual(response.json(), data)","title":"\u0422\u0435\u0441\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Worker"},{"location":"labs/lab3/313/#chicken","text":"class ChickenCreateTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=5, cage=23, square=30) def test_chicken_create(self): url = reverse('farm:chicken_create') data = { 'id': 1, 'breed': 1, 'weight': 2, 'age': 1, 'egg_amount': 2, 'cage': 1, 'prev_eggs': 1 } response = self.client.post(url, data, format='json') self.assertEqual(response.status_code, status.HTTP_201_CREATED) self.assertEqual(response.json(), data)","title":"\u0422\u0435\u0441\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Chicken"},{"location":"labs/lab3/313/#_1","text":"","title":"\u041f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432"},{"location":"labs/lab3/314/","text":"\u0422\u0435\u0441\u0442\u044b PATCH-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0422\u0435\u0441\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Breed(\u043f\u043e\u043b\u0435 'diet') class BreedPutTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') def test_update_breed(self): url = reverse('farm:breed_patch', args=['1']) data = { 'id': 1, 'breed': 'very small chicken', 'avg_eggs': 2, 'avg_weight': 2, 'diet': 'table 3' } response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) data['diet'] = 'table 6' response = self.client.put(url, data, content_type='application/json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) \u0422\u0435\u0441\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Chicken(\u043f\u043e\u043b\u044f 'egg_amount', 'prev_eggs') class ChickenPutTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=5, cage=23, square=30) Chicken.objects.create(breed=Breed.objects.get(id=1), weight=2, age=1, egg_amount=2, cage=Cage.objects.get(id=1)) def test_put_chicken(self): self.maxDiff = None url = reverse('farm:chickens', args=['1']) data = {'id': 1, 'breed': 1, 'weight': 2, 'age': 1, 'egg_amount': 2, 'cage': 1, 'prev_eggs': 0} response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) data['egg_amount'], data['prev_eggs'] = 3, 2 response = self.client.put(url, data, content_type='application/json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) \u0422\u0435\u0441\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Working(\u0438\u0437\u043c\u0435\u043d\u0435\u0438\u0435 \u0432\u044b\u0431\u043e\u0440\u0430 \u043a\u043b\u0435\u0442\u043a\u0438 \u0438\u0437 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u043f\u043e\u043b\u0435 'cage') class WorkingPatchTesst(TestCase): @classmethod def setUpTestData(cls): Cage.objects.create(shed=2, row=5, cage=23, square=30) Cage.objects.create(shed=4, row=1, cage=13, square=50) Worker.objects.create(name='Darya Kotelnikova', passport='1111 330044', position='vet', salary=50000) Working.objects.create(name=Worker.objects.get(id=1), cage=Cage.objects.get(id=1), work_type='med', work_date='2022-05-06', work_status=False) def test_update_working(self): self.maxDiff = None url = reverse('farm:working_patch', args=['1']) data = {'id': 1, 'name': 1, 'cage': 1, 'work_type': 'med', 'work_date': '2022-05-06', 'work_status': False, 'details': None } response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) data['cage'] = 2 response = self.client.put(url, data, content_type='application/json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) \u041f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432","title":"3.1.4 \u0422\u0435\u0441\u0442\u044b PATCH-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"labs/lab3/314/#patch-","text":"","title":"\u0422\u0435\u0441\u0442\u044b PATCH-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"labs/lab3/314/#breed-diet","text":"class BreedPutTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') def test_update_breed(self): url = reverse('farm:breed_patch', args=['1']) data = { 'id': 1, 'breed': 'very small chicken', 'avg_eggs': 2, 'avg_weight': 2, 'diet': 'table 3' } response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) data['diet'] = 'table 6' response = self.client.put(url, data, content_type='application/json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data)","title":"\u0422\u0435\u0441\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Breed(\u043f\u043e\u043b\u0435 'diet')"},{"location":"labs/lab3/314/#chicken-egg_amount-prev_eggs","text":"class ChickenPutTest(TestCase): @classmethod def setUpTestData(cls): Breed.objects.create(breed='very small chicken', avg_eggs=2, avg_weight=2, diet='table 3') Cage.objects.create(shed=2, row=5, cage=23, square=30) Chicken.objects.create(breed=Breed.objects.get(id=1), weight=2, age=1, egg_amount=2, cage=Cage.objects.get(id=1)) def test_put_chicken(self): self.maxDiff = None url = reverse('farm:chickens', args=['1']) data = {'id': 1, 'breed': 1, 'weight': 2, 'age': 1, 'egg_amount': 2, 'cage': 1, 'prev_eggs': 0} response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) data['egg_amount'], data['prev_eggs'] = 3, 2 response = self.client.put(url, data, content_type='application/json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data)","title":"\u0422\u0435\u0441\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Chicken(\u043f\u043e\u043b\u044f 'egg_amount', 'prev_eggs')"},{"location":"labs/lab3/314/#working-cage","text":"class WorkingPatchTesst(TestCase): @classmethod def setUpTestData(cls): Cage.objects.create(shed=2, row=5, cage=23, square=30) Cage.objects.create(shed=4, row=1, cage=13, square=50) Worker.objects.create(name='Darya Kotelnikova', passport='1111 330044', position='vet', salary=50000) Working.objects.create(name=Worker.objects.get(id=1), cage=Cage.objects.get(id=1), work_type='med', work_date='2022-05-06', work_status=False) def test_update_working(self): self.maxDiff = None url = reverse('farm:working_patch', args=['1']) data = {'id': 1, 'name': 1, 'cage': 1, 'work_type': 'med', 'work_date': '2022-05-06', 'work_status': False, 'details': None } response = self.client.get(url, format='json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data) data['cage'] = 2 response = self.client.put(url, data, content_type='application/json') self.assertEqual(response.status_code, status.HTTP_200_OK) self.assertEqual(response.json(), data)","title":"\u0422\u0435\u0441\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Working(\u0438\u0437\u043c\u0435\u043d\u0435\u0438\u0435 \u0432\u044b\u0431\u043e\u0440\u0430 \u043a\u043b\u0435\u0442\u043a\u0438 \u0438\u0437 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u043f\u043e\u043b\u0435 'cage')"},{"location":"labs/lab3/314/#_1","text":"","title":"\u041f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0442\u0435\u0441\u0442\u043e\u0432"},{"location":"labs/lab4/41/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4.1 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\u044b \u0438\u0437 \u0432\u0442\u043e\u0440\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439. \u0412 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f. \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c. \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0441 \u0447\u0435\u043a\u0431\u043e\u043a\u0441\u0430\u043c\u0438. \u0444\u0438\u043b\u044c\u0442\u0440\u044b \u043d\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d. \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0434\u0430\u0442\u0430\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447(\u0442\u0430\u043a\u0436\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430 \u0438 \u043f\u043e \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u043e\u043b\u044f\u043c) \u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u043c\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c \u041f\u043e\u0438\u0441\u043a \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438 \u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0441 \u0447\u0435\u043a\u0431\u043e\u043a\u0441\u0430\u043c\u0438 \u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443 \u0437\u0430\u0434\u0430\u0447\u0438(\u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u0442\u0438\u043f\u0443 \u0440\u0430\u0431\u043e\u0442\u044b \u0438 \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430, \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443) \u0424\u0438\u043b\u044c\u0442\u0440\u044b \u043d\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0424\u0438\u043b\u044c\u0442\u0440 \u043a\u0443\u0440\u0438\u0446 \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0443 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u043d\u0435\u0441\u0451\u043d\u043d\u044b\u0445 \u0438\u043c\u0438 \u044f\u0438\u0446","title":"4.1 \u0410\u0434\u0430\u043f\u0442\u0430\u0446\u0438\u044f \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 vue.js"},{"location":"labs/lab4/41/#41","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\u044b \u0438\u0437 \u0432\u0442\u043e\u0440\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439. \u0412 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f. \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c. \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0441 \u0447\u0435\u043a\u0431\u043e\u043a\u0441\u0430\u043c\u0438. \u0444\u0438\u043b\u044c\u0442\u0440\u044b \u043d\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4.1"},{"location":"labs/lab4/41/#_1","text":"\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0434\u0430\u0442\u0430\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447(\u0442\u0430\u043a\u0436\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430 \u0438 \u043f\u043e \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u043e\u043b\u044f\u043c)","title":"\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432"},{"location":"labs/lab4/41/#_2","text":"\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430\u043c\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435","title":"\u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f"},{"location":"labs/lab4/41/#_3","text":"\u041f\u043e\u0438\u0441\u043a \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438","title":"\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c"},{"location":"labs/lab4/41/#_4","text":"\u0424\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443 \u0437\u0430\u0434\u0430\u0447\u0438(\u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u0442\u0438\u043f\u0443 \u0440\u0430\u0431\u043e\u0442\u044b \u0438 \u0434\u043e\u043b\u0436\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u0430, \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443)","title":"\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0441 \u0447\u0435\u043a\u0431\u043e\u043a\u0441\u0430\u043c\u0438"},{"location":"labs/lab4/41/#_5","text":"\u0424\u0438\u043b\u044c\u0442\u0440 \u043a\u0443\u0440\u0438\u0446 \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0443 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u043d\u0435\u0441\u0451\u043d\u043d\u044b\u0445 \u0438\u043c\u0438 \u044f\u0438\u0446","title":"\u0424\u0438\u043b\u044c\u0442\u0440\u044b \u043d\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d"},{"location":"user/info/","text":"Updating and deleting user Get, update and delete information about a user using its ID URL : /users/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE Auth required : YES Success Responses Code : 200 OK Content : {[]} { \"username\": \"nika1\", \"first_name\": \"Veronika\", \"last_name\": \"Novikova\", \"passport\": \"123445\", \"salary\": 20000, \"cage\": [ 1, 2 ] }","title":"User's info"},{"location":"user/info/#updating-and-deleting-user","text":"Get, update and delete information about a user using its ID URL : /users/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE Auth required : YES","title":"Updating and deleting user"},{"location":"user/info/#success-responses","text":"Code : 200 OK Content : {[]} { \"username\": \"nika1\", \"first_name\": \"Veronika\", \"last_name\": \"Novikova\", \"passport\": \"123445\", \"salary\": 20000, \"cage\": [ 1, 2 ] }","title":"Success Responses"},{"location":"user/list/","text":"List of all users Shows information about all users URL : /users/list/ Method : GET Success Responses Code : 200 OK Content : {[]} [ { \"username\": \"admin\", \"first_name\": null, \"last_name\": null, \"passport\": null, \"salary\": 0, \"cage\": [] }, { \"username\": \"nika1\", \"first_name\": \"Veronika\", \"last_name\": \"Novikova\", \"passport\": \"123445\", \"salary\": 20000, \"cage\": [ 1, 2 ] } ]","title":"List of users"},{"location":"user/list/#list-of-all-users","text":"Shows information about all users URL : /users/list/ Method : GET","title":"List of all users"},{"location":"user/list/#success-responses","text":"Code : 200 OK Content : {[]} [ { \"username\": \"admin\", \"first_name\": null, \"last_name\": null, \"passport\": null, \"salary\": 0, \"cage\": [] }, { \"username\": \"nika1\", \"first_name\": \"Veronika\", \"last_name\": \"Novikova\", \"passport\": \"123445\", \"salary\": 20000, \"cage\": [ 1, 2 ] } ]","title":"Success Responses"},{"location":"work/create/","text":"Create task Creating a new task for a worker(user) in some cage URL : /work/create/ Methods : POST Success Responses Code : 200 OK Content : {[]} { \"id\": 4, \"username\": \"Veronika Novikova\", \"cage\": \"12\", \"work\": \"feed\" }","title":"Creating a work"},{"location":"work/create/#create-task","text":"Creating a new task for a worker(user) in some cage URL : /work/create/ Methods : POST","title":"Create task"},{"location":"work/create/#success-responses","text":"Code : 200 OK Content : {[]} { \"id\": 4, \"username\": \"Veronika Novikova\", \"cage\": \"12\", \"work\": \"feed\" }","title":"Success Responses"},{"location":"work/info/","text":"Updating and deleting task Get, update and delete information about a task using its ID URL : /work/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE Success Responses Code : 200 OK Content : {[]} { \"id\": 5, \"work\": \"clean\", \"username\": 4, \"cage\": 2 }","title":"Work's info"},{"location":"work/info/#updating-and-deleting-task","text":"Get, update and delete information about a task using its ID URL : /work/info/<int:pk>/ Methods : GET & PUT & PATCH & DELETE","title":"Updating and deleting task"},{"location":"work/info/#success-responses","text":"Code : 200 OK Content : {[]} { \"id\": 5, \"work\": \"clean\", \"username\": 4, \"cage\": 2 }","title":"Success Responses"},{"location":"work/list/","text":"List of all tasks Shows information about all tasks URL : /work/list/ Method : GET Success Responses Code : 200 OK Content : {[]} [ { \"id\": 4, \"username\": \"Veronika Novikova\", \"cage\": \"12\", \"work\": \"feed\" }, { \"id\": 5, \"username\": \"Veronika Novikova\", \"cage\": \"4\", \"work\": \"clean\" } ]","title":"List of work"},{"location":"work/list/#list-of-all-tasks","text":"Shows information about all tasks URL : /work/list/ Method : GET","title":"List of all tasks"},{"location":"work/list/#success-responses","text":"Code : 200 OK Content : {[]} [ { \"id\": 4, \"username\": \"Veronika Novikova\", \"cage\": \"12\", \"work\": \"feed\" }, { \"id\": 5, \"username\": \"Veronika Novikova\", \"cage\": \"4\", \"work\": \"clean\" } ]","title":"Success Responses"}]}